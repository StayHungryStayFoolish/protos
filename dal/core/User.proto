syntax = "proto3";
option java_package = "com.bootapp.dal.core.grpc";
package dal_core_user;

service DalCoreUserService {
    //--- create a user
    rpc InvokeNewUser(UserInfo) returns (UserQueryResp);
    //--- update a user
    rpc InvokeUpdateUserById(UserInfo) returns (UserQueryResp);
    //--- query a single user
    rpc QueryUser(UserInfo) returns (UserQueryResp);
    //--- query users with params
    rpc QueryUsers(UsersQueryReq) returns (UsersQueryResp);
    //--- delete users that are not activated
    rpc InvokeDelInactiveUsers(UserServiceReq) returns (UserQueryResp);
}

enum UserServiceType {
    NULL = 0;
    USER_STATUS_NORMAL = 1;
    USER_STATUS_INACTIVATED = 2;
    USER_CREATE_STATUS_SUCCESS = 101;
    USER_CREATE_STATUS_NEED_ACTIVATION = 102;
    USER_CREATE_STATUS_FAIL = 103;
    USER_UPDATE_STATUS_SUCCESS = 201;
    USER_UPDATE_STATUS_FAIL = 202;
    USER_QUERY_STATUS_SUCCESS = 301;
    USER_QUERY_STATUS_FAIL = 302;
    USER_QUERY_STATUS_WRONG_PASS = 303;

}
message UserServiceReq {

}
message UsersQueryReq {
    UserInfo user = 1;
    int64 offset_id = 2;
    int32 limit = 3;
}
message UserInfo {
    int64 id = 1;
    int64 org_id = 2;
    int64 user_role_id = 3;
    UserServiceType status = 4;
    string phone = 5;
    string email = 6;
    string username = 7;
    string password = 8;
    int64 create_at = 9;
    int64 update_at = 10;
}
message UserQueryResp {
    UserServiceType status = 1;
    string message = 2;
    UserInfo user = 3;
}
message UsersQueryResp {
    UserServiceType status = 1;
    string message = 2;
    repeated UserInfo users = 3;
}